---
- hosts: 127.0.0.1
  connection: local

  vars:
    gdev_env_dir: "/usr/local/gdev-env"
    gdev_user_files: "{{ansible_env.HOME}}/.gdev"
    machine_ip: 172.17.0.1
    compose_version: 1.13.0

  tasks:
    
    - name: Make sure apt-transport-https is installed
      become: yes
      become_method: sudo
      apt:
        pkg: "apt-transport-https"
        state: present

    - name: Ensure the system can use the HTTPS transport for APT
      stat:
        path: /usr/lib/apt/methods/https
      register: apt_https_transport

    - name: Install HTTPS transport for APT
      apt:
        pkg: apt-transport-https
        state: latest
      when: not apt_https_transport.stat.exists

    - name: Install ruby
      become: yes
      become_method: sudo
      apt: name=ruby state=present

    - name: Add Docker key
      sudo: true
      apt_key: keyserver=hkp://p80.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D

    - name: Add Docker apt-repository
      become: yes
      become_method: sudo
      apt_repository:
        repo: deb https://apt.dockerproject.org/repo ubuntu-xenial main
        state: present

    - name: Install docker package
      become: yes
      become_method: sudo
      apt: name=docker-engine update_cache=yes state=latest

    - name: Installing docker compose
      become: yes
      become_method: sudo
      shell: "curl -L https://github.com/docker/compose/releases/download/{{ compose_version }}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose"

    - name: Create gdev directory
      file:
        path: "{{ansible_env.HOME}}/.gdev"
        state: directory
        owner: "{{ansible_env.USER}}"
        group: "staff"
        recurse: yes
        mode: 0755
      # If this was somehow root owned make sure it's not anymore
      become: yes
      become_method: sudo

    - name: Symlink gdev bin to PATH
      become: yes
      become_method: sudo
      file:
        src: "{{gdev_env_dir}}/bin/gdev"
        dest: /usr/local/bin/gdev
        state: link
        force: yes
      tags: ['pre-install']
      
    - name: Adding user to docker group
      user: 
        name: "{{ansible_env.USER}}"
        groups: docker
        append: yes
      become: yes
      become_method: sudo

    - name: Make sure docker is running
      become: yes
      become_method: sudo
      service:
        name: docker
        state: started

    - name: Start gdev services
      shell: "sg docker -c '{{ gdev_env_dir }}/bin/gdev service up'"

    - name: Wait for signaler to create CA file
      wait_for:
        path: "{{ gdev_user_files }}/ca/ca.crt"
        state: present
        timeout: 30

    # We want to use https locally and you only use ca.key which is generated to you
    - name: Trust self-generated signaler Root certificate in keychain
      shell: "cp ca.crt /usr/local/share/ca-certificates/ && sudo update-ca-certificates"
      args:
        chdir: "{{ gdev_user_files }}/ca/"
      become: yes
      become_method: sudo

    - name: Ensure /etc/systemd/resolved.conf.d dir exists
      become: yes
      become_method: sudo
      file: path=/etc/systemd/resolved.conf.d state=directory

    - name: Create dns resolver files at /etc/systemd/resolved.conf.d/
      template:
        src: "{{ gdev_env_dir }}/ansible/ubuntu_resolvd.conf"
        dest: "/etc/systemd/resolved.conf.d/{{item.domain}}.conf"
        force: yes
      become: yes
      become_method: sudo
      with_items:
        - { ip: "{{ machine_ip }}", domain: test }

    - name: Restart systemd-resolved
      service: 
        name: systemd-resolved
        state: restarted
      become: yes
      become_method: sudo
