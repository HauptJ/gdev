---
- hosts: 127.0.0.1
  connection: local

  vars:
    gdev_env_dir: "/usr/local/gdev-env"
    gdev_user_files: "{{ansible_env.HOME}}/.gdev"
    machine_ip: 172.17.0.1
    compose_version: 1.15.0

  tasks:

    - name: Install ruby and php
      become: yes
      apt: 
        name: 
          - ruby 
          - php
        state: latest
      when: ansible_distribution == 'Ubuntu'

    - name: Install ruby and php
      become: yes
      dnf: 
        name: 
          - ruby 
          - php
        state: latest
      when: ansible_distribution == 'Fedora'

    - name: Download and install wp-cli
      get_url:
        url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        dest: /usr/local/bin/wp
        mode: a+x
      become: yes

    - name: Create gdev directory
      file:
        path: "{{ansible_env.HOME}}/.gdev"
        state: directory
        owner: "{{ansible_env.USER}}"
        recurse: yes
        mode: 0755
      # If this was somehow root owned make sure it's not anymore
      become: yes
      become_method: sudo

    - name: Symlink gdev bin to PATH
      become: yes
      become_method: sudo
      file:
        src: "{{gdev_env_dir}}/bin/gdev"
        dest: /usr/local/bin/gdev
        state: link
        force: yes
      tags: ['pre-install']

    - name: Start Docker if it is not running
      become: yes
      service:
        name: docker
        state: started

    - name: Start gdev services
      shell: "sg docker -c '{{ gdev_env_dir }}/bin/gdev service up'"

    - name: Wait for signaler to create CA file
      wait_for:
        path: "{{ gdev_user_files }}/ca/ca.crt"
        state: present
        timeout: 30

    # We want to use https locally and you only use ca.key which is generated to you
    - name: Trust self-generated signaler Root certificate in keychain
      shell: "cp ca.crt /usr/local/share/ca-certificates/ && sudo update-ca-certificates"
      args:
        chdir: "{{ gdev_user_files }}/ca/"
      become: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Trust self-generated signaler Root certificate in keychain
      shell: "cp ca.crt /etc/pki/ca-trust/source/anchors/"
      args:
        chdir: "{{ gdev_user_files }}/ca/"
      become: yes
      when: ansible_distribution == 'Fedora'

    - name: update trusted ca Fedora
      shell: /bin/update-ca-trust
      become: yes
      when: ansible_distribution == 'Fedora'

    - name: Include the rest of the tasks
      include_tasks: "ubuntu_xenial_includes.yml"
