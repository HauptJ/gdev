.:RUBY:.

require "yaml"

class Create
    
    class << self
        
        def start(args)
            cfg_file = args.length > 0 ? args[0] : "config.yaml"

            if (File.file?(cfg_file))
                puts "Config file found, generating project.."
                config = YAML.load(File.read(cfg_file));
            else
                puts "Config file not found, starting a wizard.."
                config = { }
            end

            self.handle_args(config)
        end

        def handle_args(config)
            actions = {
                "project_name" => -> (name) {
                    raise ArgumentError, "Project name can't contain whitespaces" unless !name.include?(" ")
                    puts "Project name set"
                    puts "Cloning WP project to project folder.."
                    system("git clone git@github.com:devgeniem/wp-project.git #{name}")
                    puts "Removing .git folder from project folder.."
                    system("rm -rf #{name}/.git")
                    puts "Cloning dustpress-theme to project folder.."
                    system("git clone git@github.com:devgeniem/the-dustpress-theme.git #{name}/web/app/themes/#{name}")
                    puts "Removing .git folder from theme folder.."
                    system("rm -rf #{name}/web/app/themes/#{name}/.git")
                }
            }

            actions.each do | command, action |
                if (config.key?(command))
                    action.call(config[command])
                else
                    beautify = command.capitalize.sub("_", " ")
                    puts "#{beautify} not set."
                    puts "Give #{beautify}:"
                    argument = gets
                    argument = argument.strip
                    action.call(argument)
                end
            end
        end

    end
end

Create.start(args)

.:/RUBY:.